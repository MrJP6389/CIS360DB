/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.*;
import java.util.Vector;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MrJP6389
 */
public class DatabaseGUI extends javax.swing.JFrame {

    /**
     * Creates new form DatabaseGUI
     */
    public DatabaseGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Functions = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        FunctionsPanel = new javax.swing.JPanel();
        CreatePlaylist = new javax.swing.JRadioButton();
        DeletePlaylist = new javax.swing.JRadioButton();
        AddSong = new javax.swing.JRadioButton();
        RemoveSong = new javax.swing.JRadioButton();
        CreateAccount = new javax.swing.JRadioButton();
        ManageSubscription = new javax.swing.JRadioButton();
        ShufflePlaylist = new javax.swing.JRadioButton();
        SortPlaylist = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        Search = new javax.swing.JRadioButton();
        PlaylistPanel = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        SongPanel = new javax.swing.JPanel();
        txtTitle = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        lblLength = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        lblArtist = new javax.swing.JLabel();
        txtArtist = new javax.swing.JTextField();
        lblAlbum = new javax.swing.JLabel();
        txtAlbum = new javax.swing.JTextField();
        lblReleaseDate = new javax.swing.JLabel();
        txtReleaseDate = new javax.swing.JTextField();
        lblSingle = new javax.swing.JLabel();
        txtSongID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comboSingle = new javax.swing.JComboBox();
        AccountPanel = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        txtBirthday = new javax.swing.JTextField();
        txtCardNumber = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAccountID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        comboSearch = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        DBResults = new javax.swing.JTable();
        FollowA = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAID = new javax.swing.JTextField();
        txtArtistName = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Functions.add(CreatePlaylist);
        CreatePlaylist.setText("Create Playlist");
        CreatePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreatePlaylistActionPerformed(evt);
            }
        });

        Functions.add(DeletePlaylist);
        DeletePlaylist.setText("Delete Playlist");
        DeletePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePlaylistActionPerformed(evt);
            }
        });

        Functions.add(AddSong);
        AddSong.setText("Add a song");
        AddSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSongActionPerformed(evt);
            }
        });

        Functions.add(RemoveSong);
        RemoveSong.setText("Remove a song");
        RemoveSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveSongActionPerformed(evt);
            }
        });

        Functions.add(CreateAccount);
        CreateAccount.setText("Create account");
        CreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAccountActionPerformed(evt);
            }
        });

        Functions.add(ManageSubscription);
        ManageSubscription.setText("Manage subscription");

        Functions.add(ShufflePlaylist);
        ShufflePlaylist.setText("Shuffle Playlist");

        Functions.add(SortPlaylist);
        SortPlaylist.setText("Sort Playlist");

        Functions.add(jRadioButton10);
        jRadioButton10.setText("Follow Artist");
        jRadioButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton10ActionPerformed(evt);
            }
        });

        Functions.add(Search);
        Search.setText("Search ");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FunctionsPanelLayout = new javax.swing.GroupLayout(FunctionsPanel);
        FunctionsPanel.setLayout(FunctionsPanelLayout);
        FunctionsPanelLayout.setHorizontalGroup(
            FunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FunctionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FunctionsPanelLayout.createSequentialGroup()
                        .addComponent(CreatePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddSong, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FunctionsPanelLayout.createSequentialGroup()
                        .addComponent(DeletePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveSong, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ManageSubscription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ShufflePlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(SortPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(FunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton10))
                .addGap(44, 44, 44))
        );
        FunctionsPanelLayout.setVerticalGroup(
            FunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FunctionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreatePlaylist)
                    .addComponent(AddSong)
                    .addComponent(CreateAccount)
                    .addComponent(ShufflePlaylist)
                    .addComponent(jRadioButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeletePlaylist)
                    .addComponent(RemoveSong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ManageSubscription)
                    .addComponent(SortPlaylist)
                    .addComponent(Search))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PlaylistPanelLayout = new javax.swing.GroupLayout(PlaylistPanel);
        PlaylistPanel.setLayout(PlaylistPanelLayout);
        PlaylistPanelLayout.setHorizontalGroup(
            PlaylistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PlaylistPanelLayout.setVerticalGroup(
            PlaylistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
        );

        PlaylistPanel.setVisible(false);

        txtSearch.setText("Search");
        txtSearch.setEnabled(false);

        lblTitle.setText("Title:");

        lblLength.setText("Length:");

        lblArtist.setText("Artist:");

        lblAlbum.setText("Album:");

        lblReleaseDate.setText("Release Date:");

        lblSingle.setText("Single:");

        jLabel4.setText("ID:");

        comboSingle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "True", "False" }));
        comboSingle.setEnabled(false);

        javax.swing.GroupLayout SongPanelLayout = new javax.swing.GroupLayout(SongPanel);
        SongPanel.setLayout(SongPanelLayout);
        SongPanelLayout.setHorizontalGroup(
            SongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SongPanelLayout.createSequentialGroup()
                .addGroup(SongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SongPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSongID, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblArtist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SongPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblSingle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboSingle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblReleaseDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SongPanelLayout.setVerticalGroup(
            SongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SongPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle)
                    .addComponent(lblLength)
                    .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArtist)
                    .addComponent(txtArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAlbum)
                    .addComponent(txtAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSongID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(SongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSingle)
                    .addComponent(lblReleaseDate)
                    .addComponent(txtReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSingle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        SongPanel.setVisible(false);

        lblName.setText("Name:");

        lblEmail.setText("Email:");

        jLabel1.setText("Card Number:");

        jLabel2.setText("Address:");

        jLabel3.setText("Birthday:");

        jLabel5.setText("ID:");

        javax.swing.GroupLayout AccountPanelLayout = new javax.swing.GroupLayout(AccountPanel);
        AccountPanel.setLayout(AccountPanelLayout);
        AccountPanelLayout.setHorizontalGroup(
            AccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AccountPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAddress))
                    .addGroup(AccountPanelLayout.createSequentialGroup()
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AccountPanelLayout.createSequentialGroup()
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AccountPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtBirthday)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccountPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AccountPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AccountPanelLayout.setVerticalGroup(
            AccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(AccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtAccountID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        AccountPanel.setVisible(false);

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        comboSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Song", "Artist" }));
        comboSearch.setEnabled(false);

        DBResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(DBResults);

        jLabel6.setText("AccountID:");

        jLabel7.setText("Artist Name:");

        javax.swing.GroupLayout FollowALayout = new javax.swing.GroupLayout(FollowA);
        FollowA.setLayout(FollowALayout);
        FollowALayout.setHorizontalGroup(
            FollowALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FollowALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtArtistName, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FollowALayout.setVerticalGroup(
            FollowALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FollowALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FollowALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtAID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArtistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FunctionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AccountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SongPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PlaylistPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(comboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch))))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FollowA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FunctionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlaylistPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SongPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AccountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FollowA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSongActionPerformed
        // TODO add your handling code here:
        PlaylistPanel.setVisible(false);
        AccountPanel.setVisible(false);
        FollowA.setVisible(false);
        SongPanel.setVisible(true);
        txtAlbum.setEnabled(true);
        txtArtist.setEnabled(true);
        txtLength.setEnabled(true);
        txtReleaseDate.setEnabled(true);
        comboSingle.setEnabled(true);
        txtSongID.setEnabled(true);
        txtTitle.setEnabled(true);
        txtSearch.setEnabled(false);
        comboSearch.setEnabled(false);
        
    }//GEN-LAST:event_AddSongActionPerformed

    private void RemoveSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveSongActionPerformed
        // TODO add your handling code here:
        PlaylistPanel.setVisible(false);
        AccountPanel.setVisible(false);
        FollowA.setVisible(false);
        SongPanel.setVisible(true);
        txtAlbum.setEnabled(false);
        txtArtist.setEnabled(false);
        txtLength.setEnabled(false);
        txtReleaseDate.setEnabled(false);
        comboSingle.setEnabled(false);
        txtSongID.setEnabled(false);
        txtTitle.setEnabled(true);
        txtSearch.setEnabled(false); 
        comboSearch.setEnabled(false);
    }//GEN-LAST:event_RemoveSongActionPerformed

    private void CreatePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatePlaylistActionPerformed
        // TODO add your handling code here:
        PlaylistPanel.setVisible(true);
        AccountPanel.setVisible(false);
        FollowA.setVisible(false);
        SongPanel.setVisible(false);
        txtSearch.setEnabled(false);
        comboSearch.setEnabled(false);
    }//GEN-LAST:event_CreatePlaylistActionPerformed

    private void DeletePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePlaylistActionPerformed
        // TODO add your handling code here:
        PlaylistPanel.setVisible(true);
        AccountPanel.setVisible(false);
        FollowA.setVisible(false);
        SongPanel.setVisible(false);
        txtSearch.setEnabled(false);
        comboSearch.setEnabled(false);
    }//GEN-LAST:event_DeletePlaylistActionPerformed

    private void CreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAccountActionPerformed
        // TODO add your handling code here:
        PlaylistPanel.setVisible(false);
        AccountPanel.setVisible(true);
        SongPanel.setVisible(false);
        FollowA.setVisible(false);
        txtSearch.setEnabled(false);
        comboSearch.setEnabled(false);
    }//GEN-LAST:event_CreateAccountActionPerformed
   
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        try 
        {
            Class.forName ("oracle.jdbc.driver.OracleDriver");
        } 
        catch (ClassNotFoundException e) 
        {
            System.out.println ("Could not load the driver"); 
        }
        
        try
        {
            Connection conn = DriverManager.getConnection
            ("jdbc:oracle:thin:@localhost:1521:xe","myUser","password");
            String query;
            ResultSet r;
            PreparedStatement p;
                                
            if(CreatePlaylist.isSelected())
            {
                query = "INSERT INTO table_name VALUES ()";
                p = conn.prepareStatement (query);
                p.executeUpdate();
                conn.commit();
                query = "SELECT * FROM Playlist";
                p = conn.prepareStatement(query);                
            }
            else if(DeletePlaylist.isSelected())
            {
                query = "DELETE FROM table_name WHERE some_column=some_value";
                p = conn.prepareStatement (query);
                p.executeUpdate();
                conn.commit();
                query = "SELECT * FROM Playlist";
                p = conn.prepareStatement(query);
            }
            else if(AddSong.isSelected())
            {
                query = "INSERT INTO SONG VALUES (?,?,?,?,?,?,?)";
                p = conn.prepareStatement (query);
                String ID = txtSongID.getText();
                String Title = txtTitle.getText();
                String Artist = txtArtist.getText();
                String Album = txtAlbum.getText();
                String RD = txtReleaseDate.getText();
                boolean s;
                String length = txtLength.getText();
                if(comboSingle.getSelectedItem().toString() == "True")
                    s = true;
                else
                    s = false;
                p.clearParameters();
                p.setString(1, ID);
                p.setString(2, Title);
                p.setString(3, Artist);
                p.setString(4, Album);
                p.setString(5, RD);
                p.setBoolean(6, s);
                p.setDouble(7, Double.parseDouble(length));
                p.executeUpdate();
                conn.commit();
                
                query = "SELECT * FROM SONG";
                p = conn.prepareStatement(query);
            }
            else if(RemoveSong.isSelected())
            {
                query = "DELETE FROM SONG WHERE Title = ?";
                p = conn.prepareStatement (query);
                p.clearParameters();
                String Title = txtTitle.getText();
                p.setString(1, Title);
                p.executeUpdate();
                conn.commit();
                
                query = "SELECT * FROM SONG";
                p = conn.prepareStatement(query);
            }
            else if(CreateAccount.isSelected())
            {
                query = "INSERT INTO Account (ADDRESS, CardNumber, EMAIL, ACCOUNTID, NAME, BIRTHDATE) VALUES (?,?,?,?,?,?)";
                p = conn.prepareStatement (query);
                p.clearParameters();
                String Address = txtAddress.getText();
                String CN = txtCardNumber.getText();
                String Email = txtEmail.getText();
                String AID = txtAccountID.getText();
                String Name = txtName.getText();
                String BD = txtBirthday.getText();
                p.setString(1, Address);
                p.setInt(2, Integer.parseInt(CN));
                p.setString(3, Email);
                p.setString(4, AID);
                p.setString(5, Name);
                p.setString(6, BD);             
                
                p.executeUpdate();
                conn.commit();
                query = "SELECT * FROM Account";
                p = conn.prepareStatement(query);
            }
            else if(ManageSubscription.isSelected())
            {
                query = "";
                p = conn.prepareStatement (query);
            }
            else if(Search.isSelected())
            {
                if(comboSearch.getSelectedItem().toString() == "Song")
                {
                    query = "select from song where title = ?";
                    p = conn.prepareStatement (query);
                    String title = txtTitle.getText();
                    p.clearParameters();
                    p.setString(1, title);
                }
                else
                {
                    query = "select * from ARTIST where LASTNAME = ?";
                    p = conn.prepareStatement (query);
                    String LastName = txtSearch.getText();
                    p.clearParameters();
                    p.setString(1, LastName);
                }
                
            }
            else if(ShufflePlaylist.isSelected())
            {
                query = "SELECT * FROM table ORDER BY NEWID()";
                p = conn.prepareStatement (query);
            }
            else if(SortPlaylist.isSelected())
            {
                query = "SELECT column_name, column_name FROM table_name ORDER BY column_name ASC|DESC";
                p = conn.prepareStatement (query);
                
            }
            else
            {
                query = "UPDATE Account SET FAVORITEARTIST = ? WHERE ACCOUNTID = ?";
                p = conn.prepareStatement (query);
                p.clearParameters();
                String AID = txtAID.getText();
                String AN = txtArtistName.getText();
                p.setString(1, AN);
                p.setString(2, AID);
                 p.executeUpdate();
                conn.commit();
                
                query = "Select * FROM Account WHERE ACCOUNTID = ?";
                p = conn.prepareStatement (query);
                p.clearParameters();
                p.setString(1, AID);                               
            }
            r = p.executeQuery();
            DBResults.setModel(buildTableModel(r));
            
        }
        catch (SQLException e)
        {
        System.out.print(e);
        }
        
    }//GEN-LAST:event_submitActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        txtSearch.setEnabled(true);
        comboSearch.setEnabled(true);
    }//GEN-LAST:event_SearchActionPerformed

    private void jRadioButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton10ActionPerformed
        // TODO add your handling code here:
        PlaylistPanel.setVisible(false);
        AccountPanel.setVisible(false);
        SongPanel.setVisible(false);
        FollowA.setVisible(true);
    }//GEN-LAST:event_jRadioButton10ActionPerformed
                                      

    public static DefaultTableModel buildTableModel(ResultSet rs)
        throws SQLException {

    ResultSetMetaData metaData = rs.getMetaData();

    // names of columns
    Vector<String> columnNames = new Vector<String>();
    int columnCount = metaData.getColumnCount();
    for (int column = 1; column <= columnCount; column++) {
        columnNames.add(metaData.getColumnName(column));
    }

    // data of the table
    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
    while (rs.next()) {
        Vector<Object> vector = new Vector<Object>();
        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
            vector.add(rs.getObject(columnIndex));
        }
        data.add(vector);
    }

    return new DefaultTableModel(data, columnNames);

}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AccountPanel;
    private javax.swing.JRadioButton AddSong;
    private javax.swing.JRadioButton CreateAccount;
    private javax.swing.JRadioButton CreatePlaylist;
    private javax.swing.JTable DBResults;
    private javax.swing.JRadioButton DeletePlaylist;
    private javax.swing.JPanel FollowA;
    private javax.swing.ButtonGroup Functions;
    private javax.swing.JPanel FunctionsPanel;
    private javax.swing.JRadioButton ManageSubscription;
    private javax.swing.JPanel PlaylistPanel;
    private javax.swing.JRadioButton RemoveSong;
    private javax.swing.JRadioButton Search;
    private javax.swing.JRadioButton ShufflePlaylist;
    private javax.swing.JPanel SongPanel;
    private javax.swing.JRadioButton SortPlaylist;
    private javax.swing.JComboBox comboSearch;
    private javax.swing.JComboBox comboSingle;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAlbum;
    private javax.swing.JLabel lblArtist;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblReleaseDate;
    private javax.swing.JLabel lblSingle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JButton submit;
    private javax.swing.JTextField txtAID;
    private javax.swing.JTextField txtAccountID;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAlbum;
    private javax.swing.JTextField txtArtist;
    private javax.swing.JTextField txtArtistName;
    private javax.swing.JTextField txtBirthday;
    private javax.swing.JTextField txtCardNumber;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtReleaseDate;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSongID;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
